#         OpenPBS (Portable Batch System) v2.3 Software License
# 
# Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
# All rights reserved.
# 
# ---------------------------------------------------------------------------
# For a license to use or redistribute the OpenPBS software under conditions
# other than those described below, or to purchase support for this software,
# please contact Veridian Systems, PBS Products Department ("Licensor") at:
# 
#    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
#                        877 902-4PBS (US toll-free)
# ---------------------------------------------------------------------------
# 
# This license covers use of the OpenPBS v2.3 software (the "Software") at
# your site or location, and, for certain users, redistribution of the
# Software to other sites and locations.  Use and redistribution of
# OpenPBS v2.3 in source and binary forms, with or without modification,
# are permitted provided that all of the following conditions are met.
# After December 31, 2001, only conditions 3-6 must be met:
# 
# 1. Commercial and/or non-commercial use of the Software is permitted
#    provided a current software registration is on file at www.OpenPBS.org.
#    If use of this software contributes to a publication, product, or
#    service, proper attribution must be given; see www.OpenPBS.org/credit.html
# 
# 2. Redistribution in any form is only permitted for non-commercial,
#    non-profit purposes.  There can be no charge for the Software or any
#    software incorporating the Software.  Further, there can be no
#    expectation of revenue generated as a consequence of redistributing
#    the Software.
# 
# 3. Any Redistribution of source code must retain the above copyright notice
#    and the acknowledgment contained in paragraph 6, this list of conditions
#    and the disclaimer contained in paragraph 7.
# 
# 4. Any Redistribution in binary form must reproduce the above copyright
#    notice and the acknowledgment contained in paragraph 6, this list of
#    conditions and the disclaimer contained in paragraph 7 in the
#    documentation and/or other materials provided with the distribution.
# 
# 5. Redistributions in any form must be accompanied by information on how to
#    obtain complete source code for the OpenPBS software and any
#    modifications and/or additions to the OpenPBS software.  The source code
#    must either be included in the distribution or be available for no more
#    than the cost of distribution plus a nominal fee, and all modifications
#    and additions to the Software must be freely redistributable by any party
#    (including Licensor) without restriction.
# 
# 6. All advertising materials mentioning features or use of the Software must
#    display the following acknowledgment:
# 
#     "This product includes software developed by NASA Ames Research Center,
#     Lawrence Livermore National Laboratory, and Veridian Information
#     Solutions, Inc.
#     Visit www.OpenPBS.org for OpenPBS software support,
#     products, and information."
# 
# 7. DISCLAIMER OF WARRANTY
# 
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
# ARE EXPRESSLY DISCLAIMED.
# 
# IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
# U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This license will be governed by the laws of the Commonwealth of Virginia,
# without reference to its choice of law rules.

proc about {} {

  global bitmap_dir canvas dialog XPBSMON_VERSION

  set dialog(aboutDialogBox) ".about"
  set dbox [popupDialogBox $dialog(aboutDialogBox) "About..."]
  set dbox_top    [lindex $dbox 0]
  set dbox_bottom [lindex $dbox 1]


  label $dbox_top.l -bitmap @$bitmap_dir/logo.bmp
  message $dbox_top.m -font $canvas(bigLabelFont) -justify center \
		-aspect 1000 -text "


XPBSMON $XPBSMON_VERSION


written by Albeaus Bayucan


The GUI toolkit used is Tcl/Tk.


For more information about PBS, please visit us at:

        http://www.openpbs.org"

  set buttons [buildCmdButtons $dbox_bottom {{{ok ok} {notes "release notes"}}}\
                        x 20m 14 3]
  set ok_button [lindex $buttons 1]
  set notes_button [lindex $buttons 2]

  $ok_button configure -command [list destroy $dialog(aboutDialogBox)]
  $notes_button configure -command {xpbs_help notes $dialog(aboutDialogBox)}

  register_default_action $dialog(aboutDialogBox) $ok_button
  pack $dbox_top.l $dbox_top.m -side left -anchor nw
  catch {tkwait window $dialog(aboutDialogBox)}

}

proc getNodesList {sitename host nodes} {

        set nodeslist ""
        catch {openrm $host} fd
        InfoBox_sendmsg "getNodesList: openrm($host): $fd" end
        if {$fd >= 0} {
                catch {addreq $fd $nodes} ret
                InfoBox_sendmsg "getNodesList: addreq($host,$nodes): $ret" end
                if {$ret >= 0} {
                        catch {getreq $fd} res
                        InfoBox_sendmsg "getNodesList: getreq($host,$nodes): $res" end
                        if { [string compare $res ""] != 0 && \
                             [string compare [string index $res 0] "?"] != 0 } {
                                set nodeslist $res
                        }
                }
                catch {closerm $fd}
                InfoBox_sendmsg "getNodesList: closerm($host)" end
        }
        return $nodeslist
}

proc TSgetStatus {fd sysframe nodename {update 1}} {

        catch {addreq $fd arch} ret
        InfoBox_sendmsg "TSgetStatus: addreq($nodename,arch): $ret" end
        if {$ret < 0} {
		if {$update} {
                	nodeUpdateStat $sysframe $nodename DOWN
		}
                return DOWN
        } else {
                catch {getreq $fd} res
                InfoBox_sendmsg "TSgetStatus: getreq($nodename,arch): $res" end
                if { [string compare $res ""] == 0 } {
			if {$update} {
                        	nodeUpdateStat $sysframe $nodename DOWN
			}
                        return DOWN
                }

                if { [string compare [string index $res 0] "?"] == 0 } {
			if {$update} {
                		nodeUpdateStat $sysframe $nodename NOINFO
			}
                        return NOINFO
                }
		if {$update} {
                	nodeUpdateStat $sysframe $nodename FREE
		}
                return FREE
        }
}

proc sendTSQueries {fd sitename nodename} {

        global queryTable

        if { ![info exists queryTable($sitename,$nodename)] } {
                return ""
        }

        set queryIdxList ""
        set row 0
        foreach queryInfo $queryTable($sitename,$nodename) {
                set col 0
                set qexpr [lindex $queryInfo 0]
                set type [lindex $queryInfo 2]

                foreach operand $qexpr {
                        if { ([string compare $type TEXT]  == 0 || \
                              [string compare $type SCALE]  == 0 ) && \
                                                [isQueryString $operand] } {
                                if [addLlist queryIdxList $operand $row $col] {
                                        catch {addreq $fd $operand}
                                        InfoBox_sendmsg "sendTSQueries: addreq($nodename,$operand)" end
                                }
			}
                        incr col
                }
                incr row
        }
        return $queryIdxList
}

proc recvResponses {fd sitename nodename querylist} {
        global queryTable

        if { ![info exists queryTable($sitename,$nodename)] } {
                return ""
        }

        set qtable $queryTable($sitename,$nodename)

        set qtable ""
        foreach qe $queryTable($sitename,$nodename) {
                set type [lindex $qe 2]
                lappend qtable $qe
        }

        set tlen [llength $querylist]
        for {set i 0} {$i < $tlen} {incr i}  {
                catch {getreq $fd} res
                InfoBox_sendmsg "recvResponses: getreq($nodename): $res" end
                if { [string compare [string index $res 0] "?"] == 0 } {
                        set res ""
                }
                set qindices [lrange [lindex $querylist $i] 1 end]

                set llen [llength $qindices]
                for {set j 0; set k 1} { $k < $llen} {incr j 2; incr k 2} {
                        set row  [lindex $qindices $j]
                        set col  [lindex $qindices $k]

                        set queryInfo [lindex $qtable $row]

                        set qexpr [lindex $queryInfo 0]
                        set hdr [lindex $queryInfo 1]
                        set typ [lindex $queryInfo 2]

                        set nqexpr [lreplace $qexpr $col $col $res]

                        set new_entry [list $nqexpr $hdr $typ]
                        set qtable [lreplace $qtable $row $row $new_entry]
                }
        }
        return $qtable
}

# xpbs_help: brings up an help information box displaying things related to
# 'help_category'.
proc xpbs_help {help_category callerDialogBox} {
  global helpdir

  if { [string compare $callerDialogBox ""] != 0 } {
    win_cmdExec $callerDialogBox "cat $helpdir/${help_category}.hlp"
  } else {
    win_cmdExec "" "cat $helpdir/${help_category}.hlp"
  }
}

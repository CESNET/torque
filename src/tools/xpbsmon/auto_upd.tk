#         OpenPBS (Portable Batch System) v2.3 Software License
# 
# Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
# All rights reserved.
# 
# ---------------------------------------------------------------------------
# For a license to use or redistribute the OpenPBS software under conditions
# other than those described below, or to purchase support for this software,
# please contact Veridian Systems, PBS Products Department ("Licensor") at:
# 
#    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
#                        877 902-4PBS (US toll-free)
# ---------------------------------------------------------------------------
# 
# This license covers use of the OpenPBS v2.3 software (the "Software") at
# your site or location, and, for certain users, redistribution of the
# Software to other sites and locations.  Use and redistribution of
# OpenPBS v2.3 in source and binary forms, with or without modification,
# are permitted provided that all of the following conditions are met.
# After December 31, 2001, only conditions 3-6 must be met:
# 
# 1. Commercial and/or non-commercial use of the Software is permitted
#    provided a current software registration is on file at www.OpenPBS.org.
#    If use of this software contributes to a publication, product, or
#    service, proper attribution must be given; see www.OpenPBS.org/credit.html
# 
# 2. Redistribution in any form is only permitted for non-commercial,
#    non-profit purposes.  There can be no charge for the Software or any
#    software incorporating the Software.  Further, there can be no
#    expectation of revenue generated as a consequence of redistributing
#    the Software.
# 
# 3. Any Redistribution of source code must retain the above copyright notice
#    and the acknowledgment contained in paragraph 6, this list of conditions
#    and the disclaimer contained in paragraph 7.
# 
# 4. Any Redistribution in binary form must reproduce the above copyright
#    notice and the acknowledgment contained in paragraph 6, this list of
#    conditions and the disclaimer contained in paragraph 7 in the
#    documentation and/or other materials provided with the distribution.
# 
# 5. Redistributions in any form must be accompanied by information on how to
#    obtain complete source code for the OpenPBS software and any
#    modifications and/or additions to the OpenPBS software.  The source code
#    must either be included in the distribution or be available for no more
#    than the cost of distribution plus a nominal fee, and all modifications
#    and additions to the Software must be freely redistributable by any party
#    (including Licensor) without restriction.
# 
# 6. All advertising materials mentioning features or use of the Software must
#    display the following acknowledgment:
# 
#     "This product includes software developed by NASA Ames Research Center,
#     Lawrence Livermore National Laboratory, and Veridian Information
#     Solutions, Inc.
#     Visit www.OpenPBS.org for OpenPBS software support,
#     products, and information."
# 
# 7. DISCLAIMER OF WARRANTY
# 
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
# ARE EXPRESSLY DISCLAIMED.
# 
# IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
# U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This license will be governed by the laws of the Commonwealth of Virginia,
# without reference to its choice of law rules.

proc auto_upd {} {
  global canvas	dialog sysinfo

  busy_cursor

## Bring up the standard Dialog box ##
  set dialog(autoUpdate) ".auto_upd"
  set dbox [popupDialogBox $dialog(autoUpdate) "Automatic Update of Data"]
  set activeWindow($dialog(autoUpdate) 1
  set dbox_top    [lindex $dbox 0]
  set dbox_bottom [lindex $dbox 1]

## BOTTOM PART ##
  set cmdButtons \
  [buildCmdButtons $dbox_bottom {{ {stop "stop updating"} {rstart "start updating"} {cont "close window"} {help help}}} x 2m 18 3]

  set cmdFrame  [lindex $cmdButtons 0]
  set cmdStop   [lindex $cmdButtons 1]
  set cmdRstart [lindex $cmdButtons 2]
  set cmdCont   [lindex $cmdButtons 3]
  set cmdHelp   [lindex $cmdButtons 4]

  $cmdRstart configure -command {
    if { [string compare $sysinfo(autoUpdateMins) ""] == 0 } {
      popupInfoBox $dialog(autoUpdate) "Please specify the minutes interval"
      return
    }
    incr sysinfo(DATA_UPDATE_SEQ)
    after [expr round($sysinfo(autoUpdateMins) * 60000)] data_auto_update \
			$sysinfo(DATA_UPDATE_SEQ)
    popupInfoBox $dialog(autoUpdate) \
      "Data auto updating will start in $sysinfo(autoUpdateMins) mins."
    if { [string compare $sysinfo(cmdButtonUpdAuto) ""] != 0 } {
	$sysinfo(cmdButtonUpdAuto) configure \
			-background $canvas(bigActiveColor)
    }
    set sysinfo(autoUpdate) 1
  }
  $cmdStop configure -command {
    incr sysinfo(DATA_UPDATE_SEQ) 
    popupInfoBox $dialog(autoUpdate) "Data auto updating stopped."
    if { [string compare $sysinfo(cmdButtonUpdAuto) ""] != 0 } {
	$sysinfo(cmdButtonUpdAuto) configure -background $canvas(bigBg)
    }
    set sysinfo(autoUpdate) 0
  }
  $cmdCont configure -command {
    destroy $dialog(autoUpdate)
  }
  $cmdHelp configure -command {xpbs_help auto_update $dialog(autoUpdate)}

## TOP PART ##
  frame $dbox_top.header -height 10m -width 10m
  frame $dbox_top.footer -height 10m -width 10m

  frame $dbox_top.u
  frame $dbox_top.u.mins

  label $dbox_top.u.l -text "mins"
  set spinBox [buildSpinbox $dbox_top.u.mins 4 1-9999 sysinfo(autoUpdateMins) \
		"" "Update Data every" left $sysinfo(autoUpdateMins)]

  set minsFrame  [lindex $spinBox 0]
  set minsEntry  [lindex $spinBox 1]

  register_default_action $minsEntry $cmdCont

  pack $dbox_top.u.mins $dbox_top.u.l -anchor nw -side left
  pack $dbox_top.header $dbox_top.u $dbox_top.footer -padx 5m


  register_default_action $dialog(autoUpdate) $cmdCont

  tkwait visibility $dialog(autoUpdate)
  remove_busy_cursor
  catch {tkwait window $dialog(autoUpdate)}
  set activeWindow($dialog(autoUpdate) 0
}
proc data_auto_update {update_seq} {
  global sysinfo 

  if { $update_seq != $sysinfo(DATA_UPDATE_SEQ) } {
    InfoBox_sendmsg "data_auto_update: updating stopped." 1
    return
  }
  after [expr round($sysinfo(autoUpdateMins) * 60000)] \
			[list data_auto_update $update_seq]
  systemPopulateNodesWithInfo $sysinfo(systemFrame)
}

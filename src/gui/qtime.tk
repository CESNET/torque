#         OpenPBS (Portable Batch System) v2.3 Software License
# 
# Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
# All rights reserved.
# 
# ---------------------------------------------------------------------------
# For a license to use or redistribute the OpenPBS software under conditions
# other than those described below, or to purchase support for this software,
# please contact Veridian Systems, PBS Products Department ("Licensor") at:
# 
#    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
#                        877 902-4PBS (US toll-free)
# ---------------------------------------------------------------------------
# 
# This license covers use of the OpenPBS v2.3 software (the "Software") at
# your site or location, and, for certain users, redistribution of the
# Software to other sites and locations.  Use and redistribution of
# OpenPBS v2.3 in source and binary forms, with or without modification,
# are permitted provided that all of the following conditions are met.
# After December 31, 2001, only conditions 3-6 must be met:
# 
# 1. Commercial and/or non-commercial use of the Software is permitted
#    provided a current software registration is on file at www.OpenPBS.org.
#    If use of this software contributes to a publication, product, or
#    service, proper attribution must be given; see www.OpenPBS.org/credit.html
# 
# 2. Redistribution in any form is only permitted for non-commercial,
#    non-profit purposes.  There can be no charge for the Software or any
#    software incorporating the Software.  Further, there can be no
#    expectation of revenue generated as a consequence of redistributing
#    the Software.
# 
# 3. Any Redistribution of source code must retain the above copyright notice
#    and the acknowledgment contained in paragraph 6, this list of conditions
#    and the disclaimer contained in paragraph 7.
# 
# 4. Any Redistribution in binary form must reproduce the above copyright
#    notice and the acknowledgment contained in paragraph 6, this list of
#    conditions and the disclaimer contained in paragraph 7 in the
#    documentation and/or other materials provided with the distribution.
# 
# 5. Redistributions in any form must be accompanied by information on how to
#    obtain complete source code for the OpenPBS software and any
#    modifications and/or additions to the OpenPBS software.  The source code
#    must either be included in the distribution or be available for no more
#    than the cost of distribution plus a nominal fee, and all modifications
#    and additions to the Software must be freely redistributable by any party
#    (including Licensor) without restriction.
# 
# 6. All advertising materials mentioning features or use of the Software must
#    display the following acknowledgment:
# 
#     "This product includes software developed by NASA Ames Research Center,
#     Lawrence Livermore National Laboratory, and Veridian Information
#     Solutions, Inc.
#     Visit www.OpenPBS.org for OpenPBS software support,
#     products, and information."
# 
# 7. DISCLAIMER OF WARRANTY
# 
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
# ARE EXPRESSLY DISCLAIMED.
# 
# IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
# U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This license will be governed by the laws of the Commonwealth of Virginia,
# without reference to its choice of law rules.
################################################################################
# qtime: defines the layout and functions of the select queue time criteria
#       dialog box.
proc qtime {} {
  global LABELFONT qtimeDialogBox activeWindow selv

  if {![info exists selv(qtimeMon)] } {
    set_dateTime selv(qtimeMon) selv(qtimeDay) selv(qtimeYear) selv(qtimeHH) selv(qtimeMM) selv(qtimeSS)
  }

  busy_cursor
## Bring up the standard Dialog box ##
  set qtimeDialogBox ".qtime"
  set dbox [popupDialogBox $qtimeDialogBox "Select Queue Time Criteria" 1 "" "" 1]
  set activeWindow($qtimeDialogBox) 1
  set dbox_top    [lindex $dbox 0]
  set dbox_bottom [lindex $dbox 1]

## BOTTOM PART ##
  set cmdButtons \
  [buildCmdButtons $dbox_bottom \
    {{{ok ok} {help help}}} x 2m 18 3]

  set cmdFrame     [lindex $cmdButtons 0]
  set cmdOk        [lindex $cmdButtons 1]
  set cmdHelp      [lindex $cmdButtons 2]

  $cmdHelp configure -command {xpbs_help select.qtime $qtimeDialogBox}

  $cmdOk configure -command {
    set operator [oper $selv(qtime_op)]
    if { [string compare $operator ""] == 0 } {
      popupInfoBox $qtimeDialogBox "Please specify the operator." 	
      return
    }

    switch -exact -- $selv(qtime_option) {
      time {
        set parts "$selv(mon_widget)  $selv(day_widget) \
                   $selv(year_widget) $selv(hour_widget) \
                   $selv(min_widget)  $selv(sec_widget)"

        foreach p $parts {

          check_spinbox_value $p
          if { [string compare [$p get] ""] == 0 } {
             popupInfoBox $qtimeDialogBox "Bad date/time value found. Please fix."
             return
          }
        }
        set datetime_arg "[cvtdatetime_arg $selv(qtimeMon) $selv(qtimeDay) \
			$selv(qtimeYear) $selv(qtimeHH) $selv(qtimeMM) \
			$selv(qtimeSS)]"
        set selv(exec_time) "Queue_Time: $operator$datetime_arg"
    
      }
      ANY {set selv(exec_time) "Queue_Time: -ANY-"}
    }
    destroy $qtimeDialogBox
  }

## TOP PART ##
  frame $dbox_top.header -height 10m -width 10m
  frame $dbox_top.footer -height 10m -width 10m
  frame $dbox_top.q


  frame $dbox_top.q.op
  frame $dbox_top.q.main
  frame $dbox_top.q.main.val

  frame $dbox_top.q.dummy -relief groove -borderwidth 3

  set spin [buildSpinbox $dbox_top.q.op 2 [list = != >= > <= <] selv qtime_op \
               "" "left" =]
  set qtimeOpFrame [lindex $spin 0]
  set selv(qtimeOp)      [lindex $spin 1]

  global vlist.$selv(qtimeOp)
  global vlist.selv.qtime_op

  register_default_action $selv(qtimeOp) $cmdOk

  set dtime [create_DateTime_box $dbox_top.q.main.val $selv(qtimeMon) \
		$selv(qtimeDay) $selv(qtimeYear) $selv(qtimeHH) \
		$selv(qtimeMM) $selv(qtimeSS) selv]

  set dtimeFrame [lindex $dtime 0]
  set selv(mon_widget)  [lindex $dtimeFrame 1]
  set selv(day_widget)  [lindex $dtimeFrame 2]
  set selv(year_widget) [lindex $dtimeFrame 3]
  set selv(hour_widget) [lindex $dtimeFrame 4]
  set selv(min_widget)  [lindex $dtimeFrame 5]
  set selv(sec_widget)  [lindex $dtimeFrame 6]

  set selv(mon_widget) [lindex $dtime 1]
  set selv(day_widget) [lindex $dtime 2]
  set selv(yr_widget)  [lindex $dtime 3]
  set selv(hh_widget)  [lindex $dtime 4]
  set selv(mm_widget)  [lindex $dtime 5]
  set selv(ss_widget)  [lindex $dtime 6]
  set selv(scrolls)    [lindex $dtime 7]
  set selv(labels)     [lindex $dtime 8]

  register_default_action $selv(mon_widget) $cmdOk
  register_default_action $selv(day_widget) $cmdOk
  register_default_action $selv(yr_widget) $cmdOk
  register_default_action $selv(hh_widget) $cmdOk
  register_default_action $selv(mm_widget) $cmdOk
  register_default_action $selv(ss_widget) $cmdOk

 set radioList [list    [concat  v \"\" $dtimeFrame] \
                        {n "ANY"}]

  set rbox [buildRadioboxes $dbox_top.q.main [list $radioList] column 0 ""]
  set rboxFrame [lindex $rbox 0]
  set rboxTime [lindex $rbox 1]
  set rboxANY [lindex $rbox 2]

    $rboxTime configure -variable selv(qtime_option) -value "time" \
         -command { \
             enable_dateTime [join "$selv(mon_widget) $selv(day_widget) \
		$selv(yr_widget) $selv(hh_widget) $selv(mm_widget) \
		$selv(ss_widget)"] $selv(scrolls) $selv(labels)
          set vlist.$selv(qtimeOp) [list = != >= > <= <]
          set vlist.selv.qtime_op [list = != >= > <= <]
         }

  $rboxANY configure -variable selv(qtime_option) -value "ANY" \
         -command { \
             disable_dateTime [join "$selv(mon_widget) $selv(day_widget) \
		$selv(yr_widget) $selv(hh_widget) $selv(mm_widget) \
		$selv(ss_widget)"] $selv(scrolls) $selv(labels)
             set vlist.$selv(qtimeOp) =
             set vlist.selv.qtime_op =
	     $selv(qtimeOp) delete 0 end
	     $selv(qtimeOp) insert 0 "="
         }

  label $dbox_top.q.l -text "Queue Time" -font $LABELFONT
  pack $rboxFrame -in $dbox_top.q.dummy -padx 3 -pady 3
  raise $rboxFrame $dbox_top.q.dummy

  pack $dbox_top.q.l $qtimeOpFrame $dbox_top.q.dummy -side left -anchor nw \
	-padx 5
  pack $dbox_top.header $dbox_top.q $dbox_top.footer -padx 5m

  set dtime_option [lindex $selv(exec_time) 1]


## set DEFAULT
  switch -exact -- $dtime_option {
    -ANY-   { $rboxANY invoke}
    default {$rboxTime invoke}
  }


  register_default_action $qtimeDialogBox $cmdOk
  tkwait visibility $qtimeDialogBox
  remove_busy_cursor
  catch {tkwait window $qtimeDialogBox}
  set activeWindow($qtimeDialogBox) 0
}

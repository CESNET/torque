#         OpenPBS (Portable Batch System) v2.3 Software License
# 
# Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
# All rights reserved.
# 
# ---------------------------------------------------------------------------
# For a license to use or redistribute the OpenPBS software under conditions
# other than those described below, or to purchase support for this software,
# please contact Veridian Systems, PBS Products Department ("Licensor") at:
# 
#    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
#                        877 902-4PBS (US toll-free)
# ---------------------------------------------------------------------------
# 
# This license covers use of the OpenPBS v2.3 software (the "Software") at
# your site or location, and, for certain users, redistribution of the
# Software to other sites and locations.  Use and redistribution of
# OpenPBS v2.3 in source and binary forms, with or without modification,
# are permitted provided that all of the following conditions are met.
# After December 31, 2001, only conditions 3-6 must be met:
# 
# 1. Commercial and/or non-commercial use of the Software is permitted
#    provided a current software registration is on file at www.OpenPBS.org.
#    If use of this software contributes to a publication, product, or
#    service, proper attribution must be given; see www.OpenPBS.org/credit.html
# 
# 2. Redistribution in any form is only permitted for non-commercial,
#    non-profit purposes.  There can be no charge for the Software or any
#    software incorporating the Software.  Further, there can be no
#    expectation of revenue generated as a consequence of redistributing
#    the Software.
# 
# 3. Any Redistribution of source code must retain the above copyright notice
#    and the acknowledgment contained in paragraph 6, this list of conditions
#    and the disclaimer contained in paragraph 7.
# 
# 4. Any Redistribution in binary form must reproduce the above copyright
#    notice and the acknowledgment contained in paragraph 6, this list of
#    conditions and the disclaimer contained in paragraph 7 in the
#    documentation and/or other materials provided with the distribution.
# 
# 5. Redistributions in any form must be accompanied by information on how to
#    obtain complete source code for the OpenPBS software and any
#    modifications and/or additions to the OpenPBS software.  The source code
#    must either be included in the distribution or be available for no more
#    than the cost of distribution plus a nominal fee, and all modifications
#    and additions to the Software must be freely redistributable by any party
#    (including Licensor) without restriction.
# 
# 6. All advertising materials mentioning features or use of the Software must
#    display the following acknowledgment:
# 
#     "This product includes software developed by NASA Ames Research Center,
#     Lawrence Livermore National Laboratory, and Veridian Information
#     Solutions, Inc.
#     Visit www.OpenPBS.org for OpenPBS software support,
#     products, and information."
# 
# 7. DISCLAIMER OF WARRANTY
# 
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
# ARE EXPRESSLY DISCLAIMED.
# 
# IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
# U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This license will be governed by the laws of the Commonwealth of Virginia,
# without reference to its choice of law rules.
######################################################################################
# checkpoint: defines the layout and functions of the select checkpoint attributes 
#	dialog box.
######################################################################################
proc checkpoint {} {
  global LABELFONT checkpointDialogBox activeWindow selv

  busy_cursor
## Bring up the standard Dialog box ##
  set checkpointDialogBox ".checkpoint"
  set dbox [popupDialogBox $checkpointDialogBox "Select Checkpoint Attribute Criteria" 1 "" "" 1]
  set activeWindow($checkpointDialogBox) 1
  set dbox_top    [lindex $dbox 0]
  set dbox_bottom [lindex $dbox 1]

## BOTTOM PART ##
  set cmdButtons \
  [buildCmdButtons $dbox_bottom \
    {{{ok ok} {help help}}} x 2m 18 3]

  set cmdFrame     [lindex $cmdButtons 0]
  set cmdOk        [lindex $cmdButtons 1]
  set cmdHelp      [lindex $cmdButtons 2]

  $cmdHelp configure -command {xpbs_help select.checkpoint $checkpointDialogBox}
  $cmdOk configure -command {

    set operator [oper $selv(checkpoint_op)]
    if { [string compare $operator ""] == 0 } {
      popupInfoBox $checkpointDialogBox "Please specify an operator."
      return
    }
    if {[string compare $selv(checkpoint_option) "c="] == 0} { 
      if {[string compare $selv(checkpoint_min) ""] != 0} {
        set selv(checkpoint) "Checkpoint: $operator$selv(checkpoint_option)$selv(checkpoint_min)"
      } else {
        popupInfoBox $checkpointDialogBox "Please specify the checkpoint interval (in mins)."
	return

      }
    } elseif {[string compare $selv(checkpoint_option) "ANY"] == 0} {
      set selv(checkpoint) "Checkpoint: -ANY-"
    } else {
      set selv(checkpoint) "Checkpoint: $operator$selv(checkpoint_option)"
    }
    destroy $checkpointDialogBox
  }

## TOP PART ##
  frame $dbox_top.header -height 10m -width 10m
  frame $dbox_top.footer -height 10m -width 10m

  frame $dbox_top.c

  frame $dbox_top.c.op
  frame $dbox_top.c.val
  frame $dbox_top.c.val.mins
  frame $dbox_top.c.dummy -relief groove -borderwidth 3

## Checkpoint attribute
  set spin [buildSpinbox $dbox_top.c.op 2 [list = != >= > <= <] selv \
	       checkpoint_op "" "left" =]
  set chkpntOpFrame [lindex $spin 0]
  set selv(chkpntSpbox) [lindex $spin 1]

  global vlist.$selv(chkpntSpbox)
  global vlist.selv.checkpoint_op
  global value.$selv(chkpntSpbox)
  register_default_action $selv(chkpntSpbox) $cmdOk

  set spin [buildSpinbox $dbox_top.c.val.mins 4 \
            1-9999 selv checkpoint_min "mins" "right" ""]
  set chkpntMinsFrame  [lindex $spin 0]
  set selv(chkpntMins)       [lindex $spin 1]
  set selv(chkpntMinsScroll) [lindex $spin 2]
  set selv(chkpntMinsLabel)  [lindex $spin 3]

  register_default_action $selv(chkpntMins) $cmdOk

  set radioList [list   {n "n: no checkpointing"} \
                        {s "s: checkpointing at host shutdown"} \
                        [concat  c= \"c =\" $chkpntMinsFrame] \
                        {c "c: checkpointing at host default minimum time"}\
                        {u "u: checkpointing not set"} \
	                {a "ANY"}]

  set rbox [buildRadioboxes $dbox_top.c.val  [list $radioList] column 0 ""]
  set chkpntAttrFrame [lindex $rbox 0]
  set rboxN [lindex $rbox 1]
  set rboxS [lindex $rbox 2]
  set rboxCeq [lindex $rbox 3]
  set rboxC [lindex $rbox 4]
  set rboxU [lindex $rbox 5]
  set rboxANY [lindex $rbox 6]
  
  $rboxN configure -variable selv(checkpoint_option) -value "n" \
	 -command { \
                       disable_spinbox  $selv(chkpntMins) \
				        $selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {= != >= > <= <}
		       set vlist.selv.checkpoint_op {= != >= > <= <}
	 }
  $rboxS configure -variable selv(checkpoint_option) -value "s" \
	 -command { \
                       disable_spinbox  $selv(chkpntMins) \
					$selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {= != >= > <= <}
		       set vlist.selv.checkpoint_op {= != >= > <= <}
	 }
  $rboxCeq configure -variable selv(checkpoint_option) -value "c=" \
	 -command { \
                       enable_spinbox   $selv(chkpntMins) \
					$selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {= != >= > <= <}
		       set vlist.selv.checkpoint_op {= != >= > <= <}
	 }
  $rboxC configure -variable selv(checkpoint_option) -value "c" \
	 -command { \
                       disable_spinbox  $selv(chkpntMins) \
					$selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {= != >= > <= <}
		       set vlist.selv.checkpoint_op {= != >= > <= <}
	 }
  $rboxU configure -variable selv(checkpoint_option) -value "u" \
	 -command { \
                       disable_spinbox  $selv(chkpntMins) \
					$selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {= !=}
		       set vlist.selv.checkpoint_op {= !=}
		       set curVal [$selv(chkpntSpbox) get]

		       if {[string compare $curVal "="] != 0 && \
			   [string compare $curVal "!="] != 0} {
		         $selv(chkpntSpbox) delete 0 end	
		         $selv(chkpntSpbox) insert 0 "="
		       }
			
	 }
  $rboxANY configure -variable selv(checkpoint_option) -value "ANY" \
	 -command { \
                       disable_spinbox  $selv(chkpntMins) \
					$selv(chkpntMinsScroll) \
                        		$selv(chkpntMinsLabel)
		       set vlist.$selv(chkpntSpbox) {=}
		       set vlist.selv.checkpoint_op {=}

		       $selv(chkpntSpbox) delete 0 end	
		       $selv(chkpntSpbox) insert 0 "="
	 }


## set DEFAULT
  set option [lindex $selv(checkpoint) 1]
  switch -regexp -- $option {
    n$   { $rboxN invoke  }
    s$   { $rboxS invoke  }
    c=$  { $rboxCeq invoke}
    c$   { $rboxC invoke  }
    u$   { $rboxU invoke  }
    -ANY- { $rboxANY invoke}
  }

  pack $dbox_top.header $dbox_top.c $dbox_top.footer -padx 5m
  label $dbox_top.c.l -text "Checkpoint Attribute" -font $LABELFONT
  pack $chkpntAttrFrame -in $dbox_top.c.dummy -padx 3 -pady 3
  raise $chkpntAttrFrame $dbox_top.c.dummy
  pack $dbox_top.c.l $chkpntOpFrame $dbox_top.c.dummy -side left \
	-anchor nw -padx 5

  register_default_action $checkpointDialogBox $cmdOk
  tkwait visibility $checkpointDialogBox
  remove_busy_cursor
  catch {tkwait window $checkpointDialogBox}
  set activeWindow($checkpointDialogBox) 0
}

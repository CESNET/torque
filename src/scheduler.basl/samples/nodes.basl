//
//         OpenPBS (Portable Batch System) v2.3 Software License
// 
// Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
// All rights reserved.
// 
// ---------------------------------------------------------------------------
// For a license to use or redistribute the OpenPBS software under conditions
// other than those described below, or to purchase support for this software,
// please contact Veridian Systems, PBS Products Department ("Licensor") at:
// 
//    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
//                        877 902-4PBS (US toll-free)
// ---------------------------------------------------------------------------
// 
// This license covers use of the OpenPBS v2.3 software (the "Software") at
// your site or location, and, for certain users, redistribution of the
// Software to other sites and locations.  Use and redistribution of
// OpenPBS v2.3 in source and binary forms, with or without modification,
// are permitted provided that all of the following conditions are met.
// After December 31, 2001, only conditions 3-6 must be met:
// 
// 1. Commercial and/or non-commercial use of the Software is permitted
//    provided a current software registration is on file at www.OpenPBS.org.
//    If use of this software contributes to a publication, product, or
//    service, proper attribution must be given; see www.OpenPBS.org/credit.html
// 
// 2. Redistribution in any form is only permitted for non-commercial,
//    non-profit purposes.  There can be no charge for the Software or any
//    software incorporating the Software.  Further, there can be no
//    expectation of revenue generated as a consequence of redistributing
//    the Software.
// 
// 3. Any Redistribution of source code must retain the above copyright notice
//    and the acknowledgment contained in paragraph 6, this list of conditions
//    and the disclaimer contained in paragraph 7.
// 
// 4. Any Redistribution in binary form must reproduce the above copyright
//    notice and the acknowledgment contained in paragraph 6, this list of
//    conditions and the disclaimer contained in paragraph 7 in the
//    documentation and/or other materials provided with the distribution.
// 
// 5. Redistributions in any form must be accompanied by information on how to
//    obtain complete source code for the OpenPBS software and any
//    modifications and/or additions to the OpenPBS software.  The source code
//    must either be included in the distribution or be available for no more
//    than the cost of distribution plus a nominal fee, and all modifications
//    and additions to the Software must be freely redistributable by any party
//    (including Licensor) without restriction.
// 
// 6. All advertising materials mentioning features or use of the Software must
//    display the following acknowledgment:
// 
//     "This product includes software developed by NASA Ames Research Center,
//     Lawrence Livermore National Laboratory, and Veridian Information
//     Solutions, Inc.
//     Visit www.OpenPBS.org for OpenPBS software support,
//     products, and information."
// 
// 7. DISCLAIMER OF WARRANTY
// 
// THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
// OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
// ARE EXPRESSLY DISCLAIMED.
// 
// IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
// U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
// OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// 
// This license will be governed by the laws of the Commonwealth of Virginia,
// without reference to its choice of law rules.
// 
//
//
// nodes.basl: A simple scheduler that runs jobs in a 1 job per cpu fashion,
//	       with varying # of cpus residing in one or more nodes.
//	       A sample setup has the following components:
//		 a) nodes list (all must be of cluster type)
//			Under <pbs_home>/server_priv/nodes file contains,
//			host1 np=1
//		        host2 np=2
//			host3 np=3
//		    
//		    NOTE: At most 1 job will run on host1, 2 jobs in host2, and
//			  3 jobs in host3. So via qmgr, adjust np attribute
//			  according to # of jobs to run per node.
//			  Or if you want jobs to share a cpu, then specify
//			  the nodes and neednodes attributes of the job to
//			  "1#shared".
//
//		 b) queues list (set via qmgr)
//
//		    	Queue: long
//   		    	queue_type = Execution
//    		    	Priority = 1
//    		    	resources_min.walltime = 02:00:01
//    			resources_default.nice = -19
//    			resources_default.nodect = 1
//    			resources_default.nodes = 1
//			resources_default.neednodes = 1
//    			resources_default.walltime = 02:00:00
//    			enabled = True
//    			started = True
//
//			Queue: short
//    			Priority = 3
//    			resources_max.walltime = 00:19:59
//    			resources_default.nice = -10
//    			resources_default.nodect = 1
//    			resources_default.nodes = 1
//			resources_default.neednodes = 1
//			resources_default.walltime = 00:05:00
//    			enabled = True
//    			started = True
//
//		c) server list (set via qmgr)
//			Server <hostname>
//			server_state = Active
//			scheduling = True
//			scheduler_iteration = 600
//			default_queue = short
//

// **************************************************************************
//
// User-defined Functions
//
// **************************************************************************

// **************************************************************************
//
// Global variable declarations
//
// **************************************************************************

// **************************************************************************
//
// main scheduling code
//
// **************************************************************************
sched_main()
{
	Set Server serv_hosts;
	Server	s;

	Set Que queues;
	Que	q;

	Set Job	jobs;
	Job	j;

	Set CNode nodes;
	
	// get all servers known to the system
	serv_hosts = AllServersGet();

        foreach (s in serv_hosts) {
 
           queues = ServerQueuesGet(s);
	   nodes = ServerNodesGet(s);
	   
           Sort(queues, QuePriorityGet, ASC);
	   foreach( q in queues ) {
		jobs = QueJobsGet(q);
		foreach(j in jobs ) {
		    if( JobStateGet(j) EQ QUEUED ) {
			JobAction(j, SYNCRUN, NULLSTR);
		    }
		} // foreach jobs
	   } // foreach queues
	} //foreach servers

}

#
# $Id$
#
# Master Makefile for the PBS Package
#
#         OpenPBS (Portable Batch System) v2.3 Software License
# 
# Copyright (c) 1999-2000 Veridian Information Solutions, Inc.
# All rights reserved.
# 
# ---------------------------------------------------------------------------
# For a license to use or redistribute the OpenPBS software under conditions
# other than those described below, or to purchase support for this software,
# please contact Veridian Systems, PBS Products Department ("Licensor") at:
# 
#    www.OpenPBS.org  +1 650 967-4675                  sales@OpenPBS.org
#                        877 902-4PBS (US toll-free)
# ---------------------------------------------------------------------------
# 
# This license covers use of the OpenPBS v2.3 software (the "Software") at
# your site or location, and, for certain users, redistribution of the
# Software to other sites and locations.  Use and redistribution of
# OpenPBS v2.3 in source and binary forms, with or without modification,
# are permitted provided that all of the following conditions are met.
# After December 31, 2001, only conditions 3-6 must be met:
# 
# 1. Commercial and/or non-commercial use of the Software is permitted
#    provided a current software registration is on file at www.OpenPBS.org.
#    If use of this software contributes to a publication, product, or
#    service, proper attribution must be given; see www.OpenPBS.org/credit.html
# 
# 2. Redistribution in any form is only permitted for non-commercial,
#    non-profit purposes.  There can be no charge for the Software or any
#    software incorporating the Software.  Further, there can be no
#    expectation of revenue generated as a consequence of redistributing
#    the Software.
# 
# 3. Any Redistribution of source code must retain the above copyright notice
#    and the acknowledgment contained in paragraph 6, this list of conditions
#    and the disclaimer contained in paragraph 7.
# 
# 4. Any Redistribution in binary form must reproduce the above copyright
#    notice and the acknowledgment contained in paragraph 6, this list of
#    conditions and the disclaimer contained in paragraph 7 in the
#    documentation and/or other materials provided with the distribution.
# 
# 5. Redistributions in any form must be accompanied by information on how to
#    obtain complete source code for the OpenPBS software and any
#    modifications and/or additions to the OpenPBS software.  The source code
#    must either be included in the distribution or be available for no more
#    than the cost of distribution plus a nominal fee, and all modifications
#    and additions to the Software must be freely redistributable by any party
#    (including Licensor) without restriction.
# 
# 6. All advertising materials mentioning features or use of the Software must
#    display the following acknowledgment:
# 
#     "This product includes software developed by NASA Ames Research Center,
#     Lawrence Livermore National Laboratory, and Veridian Information
#     Solutions, Inc.
#     Visit www.OpenPBS.org for OpenPBS software support,
#     products, and information."
# 
# 7. DISCLAIMER OF WARRANTY
# 
# THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT
# ARE EXPRESSLY DISCLAIMED.
# 
# IN NO EVENT SHALL VERIDIAN CORPORATION, ITS AFFILIATED COMPANIES, OR THE
# U.S. GOVERNMENT OR ANY OF ITS AGENCIES BE LIABLE FOR ANY DIRECT OR INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# This license will be governed by the laws of the Commonwealth of Virginia,
# without reference to its choice of law rules.
#
# the first non-comment line must be .POSIX to assure POSIX make behavior
#
@MAKE_POSIX_TARGET@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
MK_VPATH = @srcdir@

@mk_head@
@mk_dirs@

#
# Used by the 'packages' target below
#
# Additional package name, should be redefined to something meaningful to
# the user.
PKGNAME     = package

# Directory with files that override the packaged files.
# Can be redefined on the make cmdline to a permanent location
PKGOVERRIDE = $(PWD)/pkgoverride

# temp dir for the packaged files and tarballs
PKGROOT     = $(PWD)/tpackages


default: all

packages:
	@if `echo $(PKGROOT) | grep ^/ >/dev/null`;then \
	  echo "Building packages from $(PKGROOT)"; \
	else \
	  echo "Error: PKGROOT must be an absolute path"; \
	  exit 1; \
	fi
	rm -rf $(PKGROOT)
	mkdir $(PKGROOT)
	@for d in @PART_CLIENTS@ @PART_MOM@ @PART_SERVER@ `test X@PART_CLIENTS@ != X && echo @GUI@` devel;do \
	   proot=$(PKGROOT)/$$d; \
	   pname=$(PKGNAME); \
	   phost=$(PBS_MACH)-$(HOST_CPU); \
	   tarball=$(PKGROOT)/torque-$$pname-$$d-$$phost.tar.gz; \
	   pkgfile=./torque-$$pname-$$d-$$phost.sh; \
	   echo "Building $$pkgfile ..."; \
	   $(MAKE) \
	     sbindir=$$proot$(sbindir) \
	     bindir=$$proot$(bindir) \
	     libdir=$$proot$(libdir) \
	     mandir=$$proot$(mandir) \
	     includedir=$$proot$(includedir) \
	     PBS_SERVER_HOME=$$proot$(PBS_SERVER_HOME) \
	     install_$$d >/dev/null || exit 1; \
	   if test -d $(PKGOVERRIDE)/$$d ;then \
	     echo "Using override dir $(PKGOVERRIDE)/$$d"; \
	     ( cd $(PKGOVERRIDE)/$$d && tar cf - . | (cd $$proot; tar xvf - ) ); \
	   fi; \
	   ( cd $$proot; tar cf - * ) | gzip > $$tarball && \
	   ( cd $$proot; tar cf - \
	                   `test -d .$(sbindir) && echo .$(sbindir)/*` \
	                   `test -d .$(bindir) && echo .$(bindir)/*` \
	                   `test -d .$(libdir) && echo .$(libdir)/*` \
	                   `test -d .$(mandir) && echo .$(mandir)/*/*` \
	                   `test -d .$(includedir) && echo .$(includedir)/*` \
	                   `test -d .$(PBS_SERVER_HOME) && echo .$(PBS_SERVER_HOME)/*` ) \
	                   | gzip > $$tarball && \
	   cat ./buildutils/self-extract-head-sh > $$pkgfile && \
	   cat $$tarball >> $$pkgfile && \
	   chmod 755 $$pkgfile; \
	done
	@echo "Done."
	@echo ""
	@echo "The package files are self-extracting packages that can be copied"; \
	 echo "and executed on your production machines.  Use --help for options.";


all build depend install install_clients install_mom install_server install_gui install_devel clean distclean::
	@# do the distclean here so the sequencing can be assured
	@# allow for empty subdir lists and abort make if any subdir fails
	@if test "_$@_" = "_all_" -o "_$@_" = "_build_"; then \
	    cd doc; $(MAKE) soelim ; fi
	@case $@ in \
	    *clean)  SDIRS="src buildutils doc";; \
	    *)       SDIRS="src @PART_DOCS@";; \
	esac && \
	for d in $$SDIRS "" ; do \
	    if test -n "$$d"; then \
	        (cd $$d && echo Making $@ in $$d && $(MAKE) $@) || exit $$?; \
	    else true; fi; \
	done && \
	{ test "_$@_" = "_distclean_" && \
	    ($(RM) Makefile config.* tags ; exit 0) > /dev/null 2>&1 || true; }


#
# For an explanation of the following Makefile rules, see node
# `Automatic Remaking' in GNU Autoconf documentation.
#
# Note that gmake magically looks for a "Makefile" target and
# will try to remake the makefile for you. It is often the case
# that configure is slightly older than configure.in because it
# sorts earlier and is checked out of CVS repositories first.
# This often leads to autoconf being rerun the first time
# make is done, even if configure had just been run. This only
# happens with gmake and has no deleterious effect on the build
# process. For more info on this read the node 'Remaking Makefiles'
# in the GNU make info documents.
#
# However, this introduces a problem if you want separate build and src
# trees since this part of the makefile sticks its nose into the src tree,
# which may not even be writable. The solution taken is to rename the
# target "Makefile" to "_Makefile". In the src tree one could then
# do an explicit "make _Makefile".
#
_Makefile: $(srcdir)/Makefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status
config.status: $(srcdir)/configure
	./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/aclocal.m4
	type autoconf > /dev/null 2>&1 && cd $(srcdir) && autoconf

config.h: stamp-h
stamp-h: $(srcdir)/config.h.in config.status
	CONFIG_FILES= CONFIG_HEADERS=config.h ./config.status
$(srcdir)/config.h.in: $(srcdir)/stamp-h.in
$(srcdir)/stamp-h.in: $(srcdir)/configure.in $(srcdir)/aclocal.m4 $(srcdir)/acconfig.h
	type autoheader > /dev/null 2>&1 && cd $(srcdir) && autoheader
	date > $(srcdir)/stamp-h.in


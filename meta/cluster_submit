#!/bin/bash

QSUB="/software/pbs-7.0.0/bin/qsub"
LISTCACHE="/software/pbs-7.0.0/cache/list_cache"
QSTAT="/software/pbs-7.0.0/bin/qstat.bin"
SYS_AWK="awk"
SYS_GREP="grep"

PRIVATEPARM="";
NODES="1";

showHelp()
{
cat << EndHelpHeader

$0: qsub wrapper to submit cluster type jobs.

Options:

	-h | --help 		Show this help
	-p | --private 		Request a private network for the cluster
	-n | -N | --name	Cluster name
	-l | --nodes		Number of nodes
	-v | --verbose 		Debugging output

EndHelpHeader
}

#cmdline parameters
while test -n "$1"
do
	case "$1" in
		"-h" | "--help") showHelp && exit 2 ;;
		"-p" | "--private") PRIVATEPARM=":net=private" ;;
		"-n" | "-N" | "--name") shift ; NAME=$1 ;;
		"-l" | "--nodes") shift ; NODES=$1 ;;
		"-v" | "--verbose") VDEBUG="1" ;;
		*)	if [[ $1 =~ ^-.* ]]; then
				printf "Ignoring unknown argument $1\n";
			else
				NAME=$1
			fi ;;
	esac
	shift
done

#parameter tests
if [ "$NAME" = "" ]; then
	printf "Cluster name must be specified!\n";
	exit 1;
fi

#whitespace test
echo "$NAME" | grep -E "[[:space:]]"
if [ $? -eq 0 ]; then
        printf "Cluster name must not contain whitespace characters!\n";
        exit 1;
fi

#test cache for cluster name uniqueness
$LISTCACHE $HOST cluster | $SYS_AWK '{print $1}' | $SYS_GREP -w "$NAME" > /dev/null
if [ $? -eq 0 ]; then
	printf "Cache record for cluster $NAME already exists!\n";
	exit 1;
fi

#test qstat output for cluster name uniqueness
$QSTAT | $SYS_GREP -w $NAME | $SYS_AWK '{print $5}' | $SYS_GREP "[HQRBTWS]" > /dev/null
if [ $? -eq 0 ]; then
	printf "Qstat record for cluster $NAME already exists!\n";
	exit 1;
fi

#sumbit cluster
if [ "$VDEBUG" = "1" ]; then
	echo $QSUB -q reserved -l nodes=$NODES -l cluster=create$PRIVATEPARM -N $NAME
fi

$QSUB -q reserved -l nodes=$NODES -l cluster=create$PRIVATEPARM -N $NAME<<EOF
/bin/true
EOF



#! /bin/bash
# $Id: prologue.in,v 1.5 2007/12/10 23:17:01 xdenemar Exp $
#
# Started just before job execution by superior mom

JOBID="$1"
USER="$2"
GROUP="$3"

# GPU handling
CACHE_LIST=/software/pbs-7.0.0/cache/list_cache
CACHE_UPDATE=/software/pbs-7.0.0/cache/update_cache

if [ "$PBS_UMASK" != "" ]; then
	umask $PBS_UMASK
else
	umask 077
fi


DIR="/scratch"
if [ "$TORQUE_RESC_SCRATCH_TYPE" = "local" ]; then
	if [ -d $DIR ]; then
		mkdir -p "$DIR/$USER/job_$JOBID" && chown "$USER" "$DIR/$USER/job_$JOBID" && chgrp "$GROUP" "$DIR/$USER/job_$JOBID"
	fi
fi

DIR="/scratch.shared"
if [ "$TORQUE_RESC_SCRATCH_TYPE" = "shared" ]; then
	if [ -d $DIR ]; then
		mkdir -p "$DIR/$USER/job_$JOBID" && chown "$USER" "$DIR/$USER/job_$JOBID" && chgrp "$GROUP" "$DIR/$USER/job_$JOBID"
	fi
fi

DIR="/scratch.ssd"
if [ "$TORQUE_RESC_SCRATCH_TYPE" = "ssd" ]; then
	if [ -d $DIR ]; then
		mkdir -p "$DIR/$USER/job_$JOBID" && chown "$USER" "$DIR/$USER/job_$JOBID" && chgrp "$GROUP" "$DIR/$USER/job_$JOBID"
	fi
fi

GPU=$TORQUE_RESC_GPU;

if [ "$GPU" != "" ]; then
devices=(`ls /dev/nvidia[0-9]* 2>/dev/null`);

	if [ ${#devices[@]} -gt 0 ]; then
		rm -f /var/spool/torque/aux/gpu-$JOBID

		id=0;
		FREE_GPU=0;
		while [ $id -lt ${#devices[@]} ]; do
			if [ "$(grep ${devices[$id]} /var/spool/torque/aux/gpu-* 2>/dev/null)" != "" ]; then
				devices[$id]=;
			else
				let FREE_GPU+=1;
			fi
			let id+=1;
		done

		if [ $GPU -gt $FREE_GPU ]; then # if requested more then present - bail out
			exit 3;
		fi

		id=0;
		while [ $GPU -gt 0 ]; do

			while [ "${devices[$id]}" == "" ]; do
				let id+=1;
			done

			CARD=${devices[$id]};
			echo $CARD >>/var/spool/torque/aux/gpu-$JOBID;
			chown root:root $CARD;
			chmod 666 $CARD;
			$CACHE_UPDATE arien `hostname`:$CARD gpu_allocation $JOBID;

			let id+=1;
			let GPU-=1;
		done

		chmod 644 /var/spool/torque/aux/gpu-$JOBID &>/dev/null
	fi
fi

# Cloud handling

if [ ! -x /usr/sbin/magrathea-cmd ]; then
	exit 0;
fi

# Determine if this is a cluster job, if it is, don't do anything
if [ "$TORQUE_RESC_TOTAL_CLUSTER" != "" ]; then
	exit 0;
fi

if [ $TORQUE_RESC_TOTAL_NODECT -gt 1 ]; then
	preempt=
else
	preempt='-preemptible'
fi

/usr/sbin/magrathea-cmd startjob$preempt "$JOBID" "$TORQUE_RESC_PROC" &>/dev/null
if [ $? -ne 0 ]; then
	exit 2;
fi

exit 0


#!/usr/bin/perl -w

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../lib";

#use CRI::Test;

use Data::Properties;
use Fcntl ':flock';

# Copyright 2007, Cluster Resources
# By Michael Moore, mmoore@clusterresources.com

if(@ARGV != 2){
    die("ERROR: You must pass perltest a testname and a props file");
}

my $props = Data::Properties->new();
open(FH, "</etc/clustertest.conf") or die "/etc/clustertest.conf read error: $!\n";
flock(FH,LOCK_EX) or die('Bad stuff happened with the file lock on /etc/clustertest.conf'); 
$props->load(\*FH);
close(FH);

my $testbase = $props->get_property('test.base');
my $propsbase = $testbase . '../etc/props/'; 
my $propsloc = $props->get_property('data.props.loc');

my $cmd = "svn up $testbase/../";
my $svn_up = `$cmd`;

system("cp $propsbase/" . $ARGV[1] . " $propsloc") && die("ERROR: Could not copy property file to the property file location");

$cmd = $testbase . '/' . $ARGV[0]  . ' 2>&1';
my $cmdstdout = `$cmd`;

my @out = split("\n",$cmdstdout);

my $resultsdir;
my $failure = 'PASS';
my $error = '';
my $coredump = '';
foreach my $line (@out){
    $resultsdir = $1 if($line =~ m/#######   Logging results to (.*)/);
    $failure = 'FAIL' if($line =~ m/Looks like you failed/);
    $error = 'ERROR' if $line =~ /FATAL ERROR CAUGHT|compilation aborted/;
}

$failure = $error if $error ne '';

$cmdstdout = `ls $resultsdir`;

my @contents = split "\n",$cmdstdout;

my @cores = grep { /.+core.+\.log$/ } @contents;

$failure = 'COREDUMP' if scalar @cores > 0;

print "results=\"$resultsdir\"\npassfail=\"$failure\"\n";
